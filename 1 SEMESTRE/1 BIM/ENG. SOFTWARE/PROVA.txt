REQUISITOS

FUNCIONAIS
DESCREVEM AS FUNCIONALIDADES QUE UM SISTEMA DEVE POSSUIR

NAO FUNCIONAIS
DESCREVEM AS PROPRIEDADES DO SISTEMA, COMO CONFIABILIDAD, TEMPO DE RESPOSTA E
ESPAÇO EM DISCO

REGRAS DE NEGÓCIO
PREMISSAS QUE UM SISTEMA DEVE POSSUIR DE ACORDO COM O COMPORTAMENTO PADRÃO 
DOS USUÁRIOS. DEFINE A FORMA QUE O NEGÓCIO DEVE SER FEITO. CONJUNTO DE INSTURÇÕES

DOCUMENTAÇÃO DE REQUISITOS
UMA DOCUMENTAÇÃO DE REQUISITOS LISTA TODOS OS REQUISITOS FUNCIONAIS, NÃO
FUNCIONAIS E REGRAS DE NEGÓCIO QUE UM SISTEMA DEVE POSSUIR.

DEFINE AS FUNÇÕES DO SISTEMA E ESTABELECE UMA ORDEM DE IMPORTÂNCIA PARA OS
DESENVOLVEDORES


DIAGRAMAS DE CASO DE USO

MODELA APENAS OS REQUISITOS FUNCIONAIS DE UM SISTEMA

COMPOSTO POR:

CASOS DE USO - UMA FUNÇÃO DO SISTEMA

ATORES - ELEMENTO EXTERNO QUE INTERAGE COM O SISTEMA
PRIMÁRIOS : INICIAM UMA SEQUENCIA DE INTERAÇÕES
SECUNDÁRIOS : SUPERVISIONAM E OPERAM A UTILIZAÇÃO DO SISTEMA

RELACIONAMENTOS - CONECTA OS ATORES AOS CASOS DE USO
INCLUDE - UMA SEQUENCIA DE INTERAÇÕES QUE RESULTAM EM UM CASO DE USO MAIS ESPECÍFICO

EXTEND - UMA SEQUENCIA DE INTERAÇOES QUE RESULTAM EM UMA CONDIÇÃO - IF 



MODELOS DE PROCESSO DE SOFTWARE

CONJUNTO DE ATIVIDADES E RESULTADOS QUE LEVAM A PRODUÇÃO DE UM SOFTWARE

MODELO CASCATA

MAIS ANTIGO E AMPLAMENTE UTILIZADO
CLICO DE VIDA CLASSICO
COMPOSTO POR FASES, QUE SÓ COMEÇAM QUANDO OUTRA ACABA

3 FASES

ANALISE DE REQUISITOS E PROJETO
IMPLEMENTAÇÃO E TESTE
IMPLANTAÇÃO E MANUTENÇÃO

PROBLEMAS

PROJETOS RARAMENTE SEGUEM O FLUXO SEQUENCIAL
É DIFICIL ESTABELECER TODOS OS REQUISITOS LOGO NO INÍCIO DO PROJETO
GERA MUITA DOCUMENTAÇÃO
CODIFICAÇÃO DEMORADA
SÓ SE DEVE IMPLEMENTAR QUANDO OS REQUISITOS SÃO BEM CONHECIDOS
SOFTWARE DISPONÍVEL EM PONTO TARDIO


MODELO CICLO DE VIDA

DIVIDE O DESENVOL VIMENTO EM CICLOS

EM CADA CICLO SÃO IDENTIFICADAS FASES DE ANÁLISE, PROJETO, IMPLEMENTAÇÃO E
TESTES
EM CADA CICLO HÁ UM SUBCONJUNTO DE REQUISITOS
DESENVOLVIMENTO EM MINI-CASCATAS

ITERATIVO

O SISTEMA É DESENVOLVIDO EM VÁRIOS CICLOS SIMILARES

INCREMENTAL

EM CADA CICLO O SISTEMA É ESTENDIDO COM MAIS FUNCIONALIDADES

INCENTIVA A PARTICIPAÇÃO DO USUÁRIO
RISCOS MAIS BEM GERENCIADOS, PORÉM A DIFICULDADE DE GERÊNCIA É MAIOR


PROTOTIPAGEM

UMA TÉCNICA COMPLEMENTAR À ANALISE DE REQUISITOS

A CADA ITERAÇÃO É PRODUZIDO UM PROTÓTIPO DO SOFTWARE FINAL

PAPEL, INCOMPLETO OU FINAL

APLICADA QUANDO HÁ DIFICULDADE NO ENTENDIMENTO DOS REQUISITOS

A CADA PROTÓTIPO É FEITA UMA AVALIAÇÃO PELO USUÁRIO QUE INDICARÁ O QUE
DEVE SER CORRIGIDO E IMPLEMENTADO

NÃO É UM SUBSTITUTO A CONSTRUÇÃO DE MODELOS


MODELO ESPIRAL

SE BASEIA NA IDEIA DA PROTOTIPAGEM COM OS ASPECTOS CONTROLADOS DO MODELO
CASCATA

ADICIONA A ANÁLISE DE RISCO

CADA NOVA INTERAÇÃO É UM CICLO NA ESPIRAL E GERA UMA NOVA VERSÃO DO SISTEMA
CONTRUÇÃO FEITA DE FORMA INCREMENTAL
TRABALHA JUNTO AO USUÁRIO PARA DESCOBRIR SEUS REUQUISITOS AO LONGO DO
PROJETO

EXIGE EXPERIÊNCIA NA DETERMINAÇÃO DE RISCOS E NEM SEMPRE O CLIENTE É
CONVENCIDO QUE UMA FORMA EVOLUTIVA É CONTROLÁVEL


MODELO BASEADO EM COMPONENTES

REUSABILIDADE

REDUZ CUSTOS
ENTREGA MAIS RÁPIDA
BASEIA-SE NO MODELO ESPIRAL

FOCA NA INTEGRAÇÃO DE VÁRIAS PARTES, NÃO SENDO NECESSÁRIO DESENVOLVER DO
ZERO

OS RESULTADOS DEPENDEM DA BIBLIOTECA DISPONÍVEL

SE TORNA DIFÍCIL CRIAR ADEQUAÇÕES NO SISTEMA
FALTA DE EVOLUÇÃO DO SOFTWARE


PROCESSO UNIFICADO


FRAMEWORK

PROTOTIPAÇÃO
INCREMENTAL
ITERATIVO

BASEADO EM UML
FASES E FLUXOS DE TRABALHO

DEFINE OS FOCOS QUE CADA FASE CONTERÁ

VER IMAGEM DO SLIDE


METODOLOGIA ÁGIL


SURGIU DEVIDO AS DIFICULDADES DO MERCADO EM ATENDER AS 
DEMANDAS DOS CLIENTE DE MANEIRA MAIS DINÂMICA, FLEXÍVEL
E COM MAIOR PRODUTIVIDADE

MANIFESTO ÁGIL

4 VALORES E 12 PRINCÍPIOS

Priorizar mais os indivíduos e as interações entre eles do
que os processos e as ferramentas

Priorizar mais o software funcionando do que uma
documentação completa e abrangente

Priorizar mais a colaboração com e dos clientes do que
as negociações de contratos

Priorizar mais respostas a mudanças do que seguir o
plano inicial.

CONJUNTOS DE PRÁTICAS QUE PROPORCIONAM NOVAS FORMAS DE GERENCIAR PROJETOS
CICLOS CURTOS, A CADA CICLO É ENTREGUE UM CONJUNTO DE FUNCIONALIDADES PRÉ
DETERMINADAS

IDEAL QUANDO NÃO HÁ MUITAS INFORMAÇÕES SOBRE O PROJETO

ENTREGAS MAIS FREQUENTES E REGULARES
TRANSPARÊNCIA E VISIBILIDADE
FLEXIBILIDADE, POIS O SOFTWARE É PLANEJADO DE FORMA SISTÊMICA, FACILITANDO
MUDANÇAS


ANTECIPAÇÃO DE PROBLEMAS

SCRUM
XP
MSF
LEAN

















